---
title: "Test"
author: "Yuhsiang Hong"
output: github_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Objective

The purpose of this project is to build a regression model that can predict the house price based on some features of the house.

```{r}
library(tidyverse)
library(ggmap)
library(gridExtra)
library(corrplot)
library(GGally)
```

## Data Cleaning

```{r}
# Import the data
kc_house <- read_csv("kc_house_data.csv")
head(kc_house)
summary(kc_house)
```

Since "id" is meaningless to house price, it will be removed. There are several variables that can be modified or merged to more meaningful new variables:

1. "age" will be computed by "date" minus "yr_built" to represent how many years that the house had been built until the year it was sold.

2. There are a lot of houses that have never been renovated, so "yr_renovated" will be converted to a binary variable, "renovated", showing whether this house had been renovated before it was sold.

3. There are a lot of houses without basement as we can see from the summary. Thus, I will modify the "sqft_basement" to a binary variable, "basement", indicating if the house has the basement.

4. Since all the data are from a county, the changes of longtitude and lattitude are very small. Moreover, the dataset contains zipcode, which is sufficient to reflect the relationship between the house price and the location. Therefore, I will remove these two variables.

For zipcode, waterfront and view, I will change them into factorial variables.

```{r}
kc_house <- kc_house %>% 
  mutate(age = as.numeric(format(date, format="%Y")) - yr_built) %>% 
  mutate(renovated = as.factor(as.numeric(yr_renovated != 0))) %>% 
  mutate(basement = as.factor(as.numeric(sqft_basement != 0))) %>% 
  mutate(zipcode = as.factor(zipcode)) %>% 
  mutate(waterfront = as.factor(waterfront)) %>% 
  mutate(view = as.factor(view)) %>% 
  select(-id, -date, -sqft_basement, -yr_built, -yr_renovated)
```

Handle missing values.

```{r}
sapply(kc_house, function(x) sum(is.na(x)))
```

Since there are only two missing values, I will remove these two observations with missing values.

```{r}
kc_house <- na.omit(kc_house)
```

Handle variables with regard to the location of the house: lat, long, zipcode.

Visualize the house price across different regions in the county.

```{r}
# 
p1 <- qmplot(long, lat, maptype = "watercolor", color = log(price), data = kc_house, 
       main = "Scaled House Price in King County") + 
  theme(plot.title = element_text(size = 12)) + 
  theme(plot.title = element_text(hjust = 0.5)) + 
  guides(color = FALSE) +
  scale_colour_viridis_c()

p2 <- qmplot(long, lat, maptype = "watercolor", color = zipcode, data = kc_house, 
       main = "Zipcode in King County") + 
  theme(plot.title = element_text(size = 12)) + 
  theme(plot.title = element_text(hjust = 0.5)) +  
  guides(color = FALSE)

grid.arrange(p1, p2, ncol = 2)
```

As we can see, zipcode shows its effect on the house price. Since it is difficult to put latitude and longitude in the linear regression model in order to present some statistical meanings, I will remove latitude and longitude from the data frame and only keep zipcode as the location-wise variable.

```{r}
kc_house <- select(kc_house, -long, - lat)
head(kc_house)
```

## Data Exploratory

1. Examine relationships between the house price and category variables.   

```{r}
cat_variables <- c("waterfront", "view", "renovated", "basement", "zipcode")
for (i in 1:4) {
  plt <- ggplot(kc_house, aes(x = get(cat_variables[i]), y = price)) + 
    geom_boxplot(color = "black") + 
    geom_smooth(method = "lm", se = TRUE, aes(group = 1)) + 
    stat_summary(fun = mean, color = "red", geom = "point") + 
    xlab(cat_variables[i])
  assign(paste("p", i, sep = ""), plt)
}
grid.arrange(p1, p2, p3, p4)
```

All of the categorical variables seem to have linear relationships with the house price.

2. Examine relationships between the house price and continuous variables and the relationships between two different continuous predictors.   

```{r}
ggcorr(data = select(kc_house, -all_of(cat_variables)), size = 3, hjust = 0.75,
       method = c("pairwise.complete.obs", "pearson"),
       label = TRUE, label_size = 4)
```
